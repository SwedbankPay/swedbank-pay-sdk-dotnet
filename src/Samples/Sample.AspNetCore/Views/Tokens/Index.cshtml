@model Sample.AspNetCore.Models.ViewModels.TokenViewModel
@{
    ViewData["Title"] = "Tokens";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (TempData["ResponseMessage"] != null)
{
    <div class="alert alert-success">@TempData["ResponseMessage"]</div>
}

<h1>My Page</h1>

<div>
    <form asp-action="RemoveAll" asp-controller="Tokens" method="post">
        <button type="submit" class="btn btn-danger m-2" data-automation="button-cleartokens">
            Remove All Tokens
        </button>
    </form>
    <hr/>
</div>

@{
    void RenderInfo(string name, string? value)
    {
        if (!string.IsNullOrWhiteSpace(value))
        {
            <div><b>@(name)</b>: @value</div>
        }
    }
}

<h4>Saved Details</h4>
<div data-automation="div-tokens">
    <div>
        <table class="table">
            <thead>
            <tr>
                <th>Instrument</th>
                <th>Display name</th>
                <th>Instrument parameters</th>
                <th>Type</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            @if (Model.Tokens != null)
            {
                foreach (var token in Model.Tokens.Where(token => token.Operations?.DeleteTokens != null))
                {
                    <tr data-automation="@token.TokenType">
                        <td>
                            @Html.DisplayFor(modelItem => token.Instrument.Value)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => token.InstrumentDisplayName)
                        </td>
                        <td>
                            @{
                                RenderInfo("Account id", token.InstrumentParameters?.AccountId);
                                RenderInfo("Bank", token.InstrumentParameters?.Bank);
                                RenderInfo("Card brand", token.InstrumentParameters?.CardBrand);
                                RenderInfo("Expiry date", token.InstrumentParameters?.ExpiryDate);
                                RenderInfo("ExpiryPan", token.InstrumentParameters?.ExpiryPan?.ToShortDateString());
                                RenderInfo("ExpiryDPan", token.InstrumentParameters?.ExpiryDPan?.ToShortDateString());
                                RenderInfo("First name", token.InstrumentParameters?.FirstName);
                                RenderInfo("Last name", token.InstrumentParameters?.LastName);
                                RenderInfo("Email", token.InstrumentParameters?.Email);
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => token.TokenType)
                        </td>
                        <td>
                            <a class="btn btn-primary" asp-controller="Tokens"
                               asp-action="DeleteToken"
                               asp-route-tokenId=@token.Token>
                                Delete Token
                            </a>

                            @if (Model.Cart.CartLines.Any())
                            {
                                <a class="btn btn-primary"
                                   data-automation="button-checkout-with-token"
                                   asp-route-paymentToken="@token.Token"
                                   asp-action="LoadPaymentMenu"
                                   asp-controller="CheckOut">
                                    Checkout with token
                                </a>
                            }

                        </td>
                    </tr>
                }
            }
            </tbody>
        </table>
    </div>
</div>


<h4>Subscription Details</h4>
<div data-automation="div-tokens">
    <div>
        <table class="table">
            <thead>
            <tr>
                <th>Instrument</th>
                <th>Display name</th>
                <th>Instrument parameters</th>
                <th>Type</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            @if (Model.Tokens != null)
            {
                foreach (var token in Model.Tokens.Where(token => token.Operations?.DeleteRecurringTokens != null || token.Operations?.DeleteUnscheduledTokens != null))
                {
                    <tr data-automation="@token.TokenType">
                        <td>
                            @Html.DisplayFor(modelItem => token.Instrument.Value)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => token.InstrumentDisplayName)
                        </td>
                        <td>
                            @{
                                RenderInfo("Account id", token.InstrumentParameters?.AccountId);
                                RenderInfo("Bank", token.InstrumentParameters?.Bank);
                                RenderInfo("Card brand", token.InstrumentParameters?.CardBrand);
                                RenderInfo("Expiry date", token.InstrumentParameters?.ExpiryDate);
                                RenderInfo("ExpiryPan", token.InstrumentParameters?.ExpiryPan?.ToShortDateString());
                                RenderInfo("ExpiryDPan", token.InstrumentParameters?.ExpiryDPan?.ToShortDateString());
                                RenderInfo("First name", token.InstrumentParameters?.FirstName);
                                RenderInfo("Last name", token.InstrumentParameters?.LastName);
                                RenderInfo("Email", token.InstrumentParameters?.Email);
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => token.TokenType)
                        </td>
                        <td>
                            @if (token.Operations?.DeleteRecurringTokens != null)
                            {
                                <a class="btn btn-primary" asp-controller="Tokens"
                                   asp-action="DeleteRecurringToken"
                                   asp-route-tokenId=@token.Token>
                                    Delete Subscription Token
                                </a>
                            }
                            @if (token.Operations?.DeleteUnscheduledTokens != null)
                            {
                                <a class="btn btn-primary" asp-controller="Tokens"
                                   asp-action="DeleteUnscheduledToken"
                                   asp-route-tokenId=@token.Token>
                                    Delete Subscription Token
                                </a>
                            }

                        </td>
                    </tr>
                }
            }
            </tbody>
        </table>
    </div>
</div>